generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DB_URL")
}


model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String
  lastName  String
  password  String?
  roleId String
  role Role @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt()
  lastLogout DateTime?
  plans Plan[]
}
model Role {
  id        String  @id @default(uuid())
  name String @unique
  users User[]
}

model Category {
  id        String  @id @default(uuid())
  name String @unique
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt()
  image String? 
  plans Plan[]
}

model Plan {
  id        String  @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt()
  start DateTime 
  end DateTime
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  userId String
  user User @relation(fields:[userId], references: [id])
  tasks Task[]
  goals Goal[]
}

model Task {
  id        String  @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt()
  plan Plan  @relation(fields:[planId], references: [id])
  planId String
}

model Goal {
  id        String  @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt()
  plan Plan @relation(fields:[planId], references: [id])
  planId String
}
